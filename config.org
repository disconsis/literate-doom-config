#+TITLE: Literate Doom Config
#+AUTHOR: Ketan Kanishka (ketan.kanishka@nyu.edu)
#+PROPERTY: header-args :results none

Enable lexical binding for performance
#+BEGIN_SRC emacs-lisp
;;; -*- lexical-binding: t; -*-
#+END_SRC

* Look
** Font
Doom uses a number of font variables for customizing different things.
=doom-font= is the standard font. Since emacs 28, ligatures are composed automatically, so we use a font which has those. Some good options are:
- JetBrains Mono
- Iosevka Term
- Monoid
- Overpass Mono

There's a few other non-ligature retro fonts which are also nice:
- Victor Mono
- Curie

#+BEGIN_SRC emacs-lisp
(setq doom-font (font-spec :family "JetBrains Mono" :size 15))
#+END_SRC


Next comes the variable-pitch font. This is mostly used for text-based modes like org.
I use variable-pitch faces in org through =mixed-pitch-mode=, which only applies it to the appropriate faces and makes the others fixed-pitch. So the choice of variable-pitch font must play well with the choice of fixed-pitch (standard) font.
For some reason, setting =doom-variable-pitch-font= first makes =variable-pitch-mode= have no effect (although setting it after =variable-pitch-mode= is enabled and calling =doom/reload-font= makes it take effect). The default font (Verdana) is already really nice, so we'll let this be for now.
I'll list good options anyway for posterity:
- Verdana (the default)
- Aleo
- Helvetica Neue
- ET Book / ET Bembo
*************** TODO Find out why setting =doom-variable-pitch-font= makes =variable-pitch-mode= fail
*************** END

Other font settings are:
- =doom-unicode-font= which is the fallback font for unicode glyphs
- =doom-unicode-extra-fonts= which is for unicode overrides over the fallback
- =doom-big-font= which is used for presentations with =doom-big-font-mode=
The defaults for all of these are pretty good (the last one defaulting to the default =doom-font=)

** Theme
=doom-themes= provides a number of excellent themes like:
- doom-one
- doom-tomorrow-night
- doom-dracula
- doom-sourcerer

Aside from those:
- =tao-yang= is an excellent monochrome light theme, but it's too bright to use in the evenings (insert light-theme joke...)

#+BEGIN_SRC emacs-lisp
(setq doom-theme 'doom-tomorrow-night)
#+END_SRC

* Org-mode
org-mode forms the base of this config, so some quick improvements are sorely needed.

** Blocks
First, some templates are needed to quickly add source blocks.
#+BEGIN_SRC emacs-lisp
(after! org
  (dolist (template '(("el" . "src emacs-lisp")
                      ("hs" . "src haskell")
                      ("py" . "src python")
                      ("sh" . "src shell")))
    (push template org-structure-template-alist)))
#+END_SRC

** Libraries
=org-tempo= needs to be loaded for template expansions like =<el= to work.
#+begin_src emacs-lisp
(after! org
  (load "org-tempo"))
#+end_src

Inline tasks are also incredibly useful. =org-inlinetask= needs to be loaded for this.
#+begin_src emacs-lisp
(after! org
  (load "org-inlinetask"))
#+end_src

** Look
Since org is a text-based mode, it is only natural to use variable-pitch fonts with it. However, source blocks and the like should use fixed-pitch fonts. =mixed-pitch-mode= solves this problem.
We might as well enable this is in all text-based modes. The =mixed-pitch= package resides in the =:ui/zen= module, so that must be enabled for this to work.
#+begin_src emacs-lisp
(when (featurep! :ui zen)
  (add-hook! 'text-mode-hook #'mixed-pitch-mode))
#+end_src

Line numbers also do not make a lot of sense for text-based modes. Doom adds a hook to enable them in text-mode, so we remove that to reduce computation.
#+begin_src emacs-lisp
(remove-hook! 'text-mode-hook #'display-line-numbers-mode)
(add-hook! 'text-mode-hook :append (setq-local display-line-numbers nil))
#+end_src

Emphasis markers clutter up the text, so we turn it off.
#+begin_src emacs-lisp
(after! org
  (setq org-hide-emphasis-markers t))
#+end_src

The default ellipsis looks pretty bad, so add a cool unicode one!
Good options here are:
- ⬎
- 
#+begin_src emacs-lisp
(after! org
  (setq org-ellipsis "  "))
#+end_src

Make the ellipsis the same color as the headline.
#+begin_src emacs-lisp
(after! org
  (set-face-attribute 'org-ellipsis nil :foreground 'unspecified))
#+end_src

I like adding empty lines between headlines to keep things neatly organized, but org folds those up along with the block. This prevent this from happening.
#+begin_src emacs-lisp
(after! org
  (setq org-cycle-separator-lines -1))
#+end_src

* Spacemacsy keybindings
Make some keybindings a bit more like Spacemacs.
~SPC :~ (=M-x=) in particular is really hard to hit for such a commonly-used command.
#+begin_src emacs-lisp
(map! :leader
      :n "SPC" #'counsel-M-x
      :n ";"   #'pp-eval-expression)
#+end_src

Like Spacemacs, Doom maps =localleader= to ~SPC m~, but unlike Spacemacs, does not allow accessing it through ~,~
We set its insert-mode counterpart to ~C-,~ , which doesn't do anything important by default.
#+begin_src emacs-lisp
(setq doom-localleader-key ","
      doom-localleader-alt-key "C-,")
#+end_src

* Language-specific settings
** Shell
Shell programs typically only need to look for documentation through man pages. Anything more complicated than that is probably not going to be searchable through a keyword alone. We set the documentation lookup handler accordingly. Either =man= or =woman= would work here, but since they are interactive commands, when called as lookup handlers they ask the user for input instead of just using the one passed to them. To get around this we wrap them in a lambda.
#+begin_src emacs-lisp
(after! sh-script
  (defun my/woman-non-interactive ;; sexist
      (topic) (woman topic))

  (set-lookup-handlers! 'sh-mode
    :documentation '(my/woman-non-interactive)))
#+end_src
